/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Render, RenderInterface } from "../../Render.sol/Render";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_LAYERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionNr",
        type: "uint256",
      },
    ],
    name: "getCollectionName",
    outputs: [
      {
        internalType: "string",
        name: "out",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_collectionId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_layerId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_traitId",
        type: "uint8",
      },
    ],
    name: "getSVGForTrait",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_layerId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_traitId",
        type: "uint8",
      },
    ],
    name: "getTraitData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "layerId",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "traitId",
        type: "uint8",
      },
    ],
    name: "getTraitDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "mimetype",
            type: "string",
          },
        ],
        internalType: "struct IIndelible.Trait",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int8",
        name: "num",
        type: "int8",
      },
    ],
    name: "int8ToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "mash",
    outputs: [
      {
        internalType: "contract IMash",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "collection",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "traitId",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "pfpRender",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "scale",
            type: "uint8",
          },
          {
            internalType: "int8",
            name: "xOffset",
            type: "int8",
          },
          {
            internalType: "int8",
            name: "yOffset",
            type: "int8",
          },
        ],
        internalType: "struct SharedStructs.LayerStruct[7]",
        name: "layerInfo",
        type: "tuple[7]",
      },
    ],
    name: "previewCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newMash",
        type: "address",
      },
    ],
    name: "setMash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "collection",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "traitId",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "pfpRender",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "scale",
            type: "uint8",
          },
          {
            internalType: "int8",
            name: "xOffset",
            type: "int8",
          },
          {
            internalType: "int8",
            name: "yOffset",
            type: "int8",
          },
        ],
        internalType: "struct SharedStructs.LayerStruct[7]",
        name: "layerInfo",
        type: "tuple[7]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "maxSupply",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minted",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "xSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ySize",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructs.CollectionInfo[7]",
        name: "_collections",
        type: "tuple[7]",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061273b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063885d80341161008c57806399255b901161006657806399255b90146101f0578063c829b0e314610203578063f2fde38b14610219578063f7f496861461022c57600080fd5b8063885d80341461019b5780638a276804146101cc5780638da5cb5b146101df57600080fd5b8063715018a6116100c8578063715018a61461014b5780637599ead61461015557806378862893146101805780638129fc1c1461019357600080fd5b806332167971146100ef57806341c3627c1461011857806353e186cf14610138575b600080fd5b6101026100fd366004611715565b61023f565b60405161010f9190611786565b60405180910390f35b61012b6101263660046117d4565b610323565b60405161010f919061181f565b610102610146366004611858565b6103b4565b61015361054b565b005b606554610168906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b61010261018e366004611a05565b61055f565b6101536106e1565b6101026101a9366004611a22565b6040805160f89290921b6020830152805160018184030181526021909201905290565b6101536101da366004611a3d565b6107f7565b6033546001600160a01b0316610168565b6101026101fe366004611a6a565b610821565b61020b600781565b60405190815260200161010f565b610153610227366004611a3d565b610c21565b61010261023a3660046117d4565b610c97565b606554604051630b43e78560e31b8152600481018390526060916001600160a01b031690635a1f3c289060240160a060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad9190611b5a565b600001516001600160a01b0316633cca24206040518163ffffffff1660e01b8152600401600060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103169190810190611c56565b5094979650505050505050565b60408051808201825260608082526020820152905163ea84b59b60e01b815260ff8481166004830152831660248201526001600160a01b0385169063ea84b59b90604401600060405180830381865afa158015610384573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ac9190810190611d56565b949350505050565b604080516204006081019091526204004081526000602090910181815260609190606554604051630b43e78560e31b815260ff881660048201529192506000916001600160a01b0390911690635a1f3c289060240160a060405180830381865afa158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a9190611b5a565b9050600061045d82600001518787610c97565b9050600061047083600001518888610323565b90506104a1816020015160405160200161048a9190611dfd565b60408051601f198184030181529190528590610d11565b6104b46104ad83610d2a565b8590610d11565b60408051808201909152600381526211179f60e91b60208201526104d9908590610d11565b6104fc6040518060e0016040528060ac815260200161261a60ac91398590610d11565b61050c836060015160ff16610e7d565b61051c846080015160ff16610e7d565b8560405160200161052f93929190611ef3565b6040516020818303038152906040529450505050509392505050565b610553610f10565b61055d6000610f6a565b565b6060600061056b611668565b6105736116b5565b60005b60078110156106cc5785816007811061059157610591611f76565b60200201515160ff16156106ba576065546001600160a01b0316635a1f3c288783600781106105c2576105c2611f76565b60200201515160405160e083901b6001600160e01b031916815260ff909116600482015260240160a060405180830381865afa158015610606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062a9190611b5a565b83826007811061063c5761063c611f76565b602002015261069783826007811061065657610656611f76565b60200201515187836007811061066e5761066e611f76565b60200201516020015188846007811061068957610689611f76565b602002015160400151610323565b8282600781106106a9576106a9611f76565b60200201526106b784611fa2565b93505b806106c481611fc1565b915050610576565b506106d8858383610fbc565b95945050505050565b600054610100900460ff16158080156107015750600054600160ff909116105b8061071b5750303b15801561071b575060005460ff166001145b6107835760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156107a6576000805461ff0019166101001790555b6107ae6112f8565b80156107f4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6107ff610f10565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6060600061082d6116ee565b6108356116b5565b60005b60078110156109a45786816007811061085357610853611f76565b60200201515160ff16156109925761088487826007811061087657610876611f76565b60200201515160ff16611327565b85816007811061089657610896611f76565b6020020151600001516001600160a01b0316633cca24206040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109049190810190611c56565b5088945086935050600783109150610920905057610920611f76565b602002015261096d86826007811061093a5761093a611f76565b60200201515188836007811061095257610952611f76565b60200201516020015189846007811061068957610689611f76565b82826007811061097f5761097f611f76565b60200201528361098e81611fa2565b9450505b8061099c81611fc1565b915050610838565b5060006109b088610e7d565b6040516020016109c09190611fda565b6040516020818303038152906040529050806040516020016109e29190612098565b6040516020818303038152906040529050606060005b60078160ff161015610b8e57888160ff1660078110610a1957610a19611f76565b60200201515160ff1615610b7c576065546001600160a01b031663ef3f0f788a60ff841660078110610a4d57610a4d611f76565b60200201515160405160e083901b6001600160e01b031916815260ff9091166004820152602401600060405180830381865afa158015610a91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ab991908101906120cb565b915060ff811615610ae75782604051602001610ad5919061218e565b60405160208183030381529060405292505b82828a8360ff1660078110610afe57610afe611f76565b60200201516020015160ff1681518110610b1a57610b1a611f76565b6020026020010151858360ff1660078110610b3757610b37611f76565b6020020151518760ff851660078110610b5257610b52611f76565b6020020151604051602001610b6a94939291906121b3565b60405160208183030381529060405292505b80610b8681611fa2565b9150506109f8565b5081604051602001610ba09190612263565b60405160208183030381529060405291508460ff16600014610bf35781610bd0610bcb8a8a87610fbc565b610d2a565b604051602001610be1929190612288565b60405160208183030381529060405291505b81604051602001610c0491906122fd565b60408051808303601f190181529190529998505050505050505050565b610c29610f10565b6001600160a01b038116610c8e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161077a565b6107f481610f6a565b6040516304edd5e560e11b815260ff8084166004830152821660248201526060906001600160a01b038516906309dbabca90604401600060405180830381865afa158015610ce9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ac9190810190612322565b610d1c82825161136c565b610d2682826113f7565b5050565b60608151600003610d4957505060408051602081019091526000815290565b60006040518060600160405280604081526020016126c66040913990506000600384516002610d789190612357565b610d82919061236f565b610d8d906004612391565b67ffffffffffffffff811115610da557610da5611878565b6040519080825280601f01601f191660200182016040528015610dcf576020820181803683370190505b509050600182016020820185865187015b80821015610e3b576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610de0565b5050600386510660018114610e575760028114610e6a57610e72565b603d6001830353603d6002830353610e72565b603d60018303535b509195945050505050565b60606000610e8a8361142d565b600101905060008167ffffffffffffffff811115610eaa57610eaa611878565b6040519080825280601f01601f191660200182016040528015610ed4576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ede57509392505050565b6033546001600160a01b0316331461055d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161077a565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60408051620400608101909152620400408152600060209091018181528451608001518451606090810151909391610ff3916123b0565b865160809081015187519091015160ff92909216925060009161101691906123b0565b60ff16905060005b60078110156112715787816007811061103957611039611f76565b60200201515160ff161561125f5761109588826007811061105c5761105c611f76565b602002015188836007811061107357611073611f76565b602002015188846007811061108a5761108a611f76565b602002015187611506565b87516060015161125f57828882600781106110b2576110b2611f76565b602002015160c0015160000b8983600781106110d0576110d0611f76565b6020020151608001518984600781106110eb576110eb611f76565b6020020151608001516110fe91906123b0565b60ff1661110b91906123d9565b131561117f5787816007811061112357611123611f76565b602002015160c0015160000b88826007811061114157611141611f76565b60200201516080015188836007811061115c5761115c611f76565b60200201516080015161116f91906123b0565b60ff1661117c91906123d9565b92505b8188826007811061119257611192611f76565b602002015160a0015160000b8983600781106111b0576111b0611f76565b6020020151608001518984600781106111cb576111cb611f76565b6020020151606001516111de91906123b0565b60ff166111eb91906123d9565b131561125f5787816007811061120357611203611f76565b602002015160a0015160000b88826007811061122157611221611f76565b60200201516080015188836007811061123c5761123c611f76565b60200201516060015161124f91906123b0565b60ff1661125c91906123d9565b91505b8061126981611fc1565b91505061101e565b506112956040518060e0016040528060ac815260200161261a60ac91398490610d11565b61129e81610e7d565b6112a783610e7d565b6112ba6112b584600a612391565b610e7d565b6112c86112b586600a612391565b866040516020016112dd95949392919061241a565b60405160208183030381529060405293505050509392505050565b600054610100900460ff1661131f5760405162461bcd60e51b815260040161077a906124da565b61055d611617565b6107f48160405160240161133d91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611647565b600061137e83601f190151603f190190565b9050600082845161138f9190612357565b9050808210156113f15760405162461bcd60e51b815260206004820152602760248201527f44796e616d69634275666665723a20417070656e64696e67206f7574206f66206044820152663137bab732399760c91b606482015260840161077a565b50505050565b8051602082019150808201602084510184015b8184101561142257835181526020938401930161140a565b505082510190915250565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061146c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611498576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106114b657662386f26fc10000830492506010015b6305f5e10083106114ce576305f5e100830492506008015b61271083106114e257612710830492506004015b606483106114f4576064830492506002015b600a8310611500576001015b92915050565b600061151f846000015186602001518760400151610c97565b90506115d861154f8660a001516040805160f89290921b6020830152805160018184030181526021909201905290565b60c08701516040805160f89290921b602083015280518083036001018152602190920190526115938860800151886060015161158b91906123b0565b60ff16610e7d565b6115aa8960800151896080015161158b91906123b0565b6020808901516040516115c1969594939201612525565b60408051601f198184030181529190528390610d11565b6115eb6115e482610d2a565b8390610d11565b60408051808201909152600381526211179f60e91b6020820152611610908390610d11565b5050505050565b600054610100900460ff1661163e5760405162461bcd60e51b815260040161077a906124da565b61055d33610f6a565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040518060e001604052806007905b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816116775790505090565b6040518060e001604052806007905b60408051808201909152606080825260208201528152602001906001900390816116c45790505090565b6040518060e001604052806007905b60608152602001906001900390816116fd5790505090565b60006020828403121561172757600080fd5b5035919050565b60005b83811015611749578181015183820152602001611731565b838111156113f15750506000910152565b6000815180845261177281602086016020860161172e565b601f01601f19169290920160200192915050565b602081526000611799602083018461175a565b9392505050565b6001600160a01b03811681146107f457600080fd5b60ff811681146107f457600080fd5b80356117cf816117b5565b919050565b6000806000606084860312156117e957600080fd5b83356117f4816117a0565b92506020840135611804816117b5565b91506040840135611814816117b5565b809150509250925092565b60208152600082516040602084015261183b606084018261175a565b90506020840151601f198483030160408501526106d8828261175a565b60008060006060848603121561186d57600080fd5b83356117f4816117b5565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156118b1576118b1611878565b60405290565b60405160a0810167ffffffffffffffff811182821017156118b1576118b1611878565b604051601f8201601f1916810167ffffffffffffffff8111828210171561190357611903611878565b604052919050565b8035600081900b81146117cf57600080fd5b600082601f83011261192e57600080fd5b61193661188e565b8061062084018581111561194957600080fd5b845b818110156119fa5760e081880312156119645760008081fd5b61196c61188e565b8135611977816117b5565b8152602082810135611988816117b5565b8282015260408381013561199b816117b5565b9083015260608381013580151581146119b45760008081fd5b9083015260806119c58482016117c4565b9083015260a06119d684820161190b565b9083015260c06119e784820161190b565b908301529085529093019260e00161194b565b509095945050505050565b60006106208284031215611a1857600080fd5b611799838361191d565b600060208284031215611a3457600080fd5b6117998261190b565b600060208284031215611a4f57600080fd5b8135611799816117a0565b61ffff811681146107f457600080fd5b6000806000610aa0808587031215611a8157600080fd5b843593506020611a938782880161191d565b93508661065f870112611aa557600080fd5b611aad61188e565b918601918088841115611abf57600080fd5b61064088015b84811015611b4b5760a0818b031215611ade5760008081fd5b611ae66118b7565b8135611af1816117a0565b815281850135611b0081611a5a565b81860152604082810135611b1381611a5a565b90820152606082810135611b26816117b5565b90820152608082810135611b39816117b5565b9082015283529183019160a001611ac5565b50809450505050509250925092565b600060a08284031215611b6c57600080fd5b60405160a0810181811067ffffffffffffffff82111715611b8f57611b8f611878565b6040528251611b9d816117a0565b81526020830151611bad81611a5a565b60208201526040830151611bc081611a5a565b60408201526060830151611bd3816117b5565b60608201526080830151611be6816117b5565b60808201529392505050565b600082601f830112611c0357600080fd5b815167ffffffffffffffff811115611c1d57611c1d611878565b611c30601f8201601f19166020016118da565b818152846020838601011115611c4557600080fd5b6103ac82602083016020870161172e565b600080600080600080600060e0888a031215611c7157600080fd5b875167ffffffffffffffff80821115611c8957600080fd5b611c958b838c01611bf2565b985060208a0151915080821115611cab57600080fd5b611cb78b838c01611bf2565b975060408a0151915080821115611ccd57600080fd5b611cd98b838c01611bf2565b965060608a0151915080821115611cef57600080fd5b611cfb8b838c01611bf2565b955060808a0151915080821115611d1157600080fd5b611d1d8b838c01611bf2565b945060a08a0151935060c08a0151915080821115611d3a57600080fd5b50611d478a828b01611bf2565b91505092959891949750929550565b600060208284031215611d6857600080fd5b815167ffffffffffffffff80821115611d8057600080fd5b9083019060408286031215611d9457600080fd5b604051604081018181108382111715611daf57611daf611878565b604052825182811115611dc157600080fd5b611dcd87828601611bf2565b825250602083015182811115611de257600080fd5b611dee87828601611bf2565b60208301525095945050505050565b7f3c696d6167652077696474683d223130302522206865696768743d223130302581526c1110343932b31e913230ba309d60991b602082015260008251611e4b81602d85016020870161172e565b670ed8985cd94d8d0b60c21b602d939091019283015250603501919050565b7f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323081527f30302f737667222073686170652d72656e646572696e673d226372697370456460208201527f676573222076657273696f6e3d22312e31222069643d22706978656c2220766960408201526a032bba137bc1e91181018160ad1b6060820152606b0190565b6000611efe82611e6a565b8551611f0e818360208a0161172e565b600160fd1b91019081528451611f2b81600184016020890161172e565b7f222077696474683d223132303022206865696768743d2231323030223e200000600192909101918201528351611f6981601f84016020880161172e565b01601f0195945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103611fb857611fb8611f8c565b60010192915050565b600060018201611fd357611fd3611f8c565b5060010190565b7519185d184e985c1c1b1a58d85d1a5bdb8bda9cdbdb8b60521b8152607b60f81b60168201527f226e616d6522203a2022496e64656c69626c65204d617368757020230000000060178201526000825161203b81603385016020870161172e565b6201116160ed1b60339390910192830152507f226465736372697074696f6e22203a20225768617420497320546869732c20616036820152731021b937b9b9b7bb32b91022b834b9b7b2329f9160611b6056820152606a01919050565b600082516120aa81846020870161172e565b6e2c2261747472696275746573223a5b60881b920191825250600f01919050565b600060208083850312156120de57600080fd5b825167ffffffffffffffff808211156120f657600080fd5b818501915085601f83011261210a57600080fd5b81518181111561211c5761211c611878565b8060051b61212b8582016118da565b918252838101850191858101908984111561214557600080fd5b86860192505b83831015612181578251858111156121635760008081fd5b6121718b89838a0101611bf2565b835250918601919086019061214b565b9998505050505050505050565b600082516121a081846020870161172e565b600b60fa1b920191825250600101919050565b600085516121c5818460208a0161172e565b6e3d913a3930b4ba2fba3cb832911d1160891b90830190815285516121f181600f840160208a0161172e565b6a1116113b30b63ab2911d1160a91b600f9290910191820152845161221d81601a84016020890161172e565b6601014333937b6960cd1b601a9290910191820152835161224581602184016020880161172e565b6229227d60e81b602192909101918201526024019695505050505050565b6000825161227581846020870161172e565b605d60f81b920191825250600101919050565b6000835161229a81846020880161172e565b80830190507f2c22696d616765223a2022646174613a696d6167652f7376672b786d6c3b62618152641cd94d8d0b60da1b602082015283516122e381602584016020880161172e565b601160f91b60259290910191820152602601949350505050565b6000825161230f81846020870161172e565b607d60f81b920191825250600101919050565b60006020828403121561233457600080fd5b815167ffffffffffffffff81111561234b57600080fd5b6103ac84828501611bf2565b6000821982111561236a5761236a611f8c565b500190565b60008261238c57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156123ab576123ab611f8c565b500290565b600060ff821660ff84168160ff04811182151516156123d1576123d1611f8c565b029392505050565b600080821280156001600160ff1b03849003851316156123fb576123fb611f8c565b600160ff1b839003841281161561241457612414611f8c565b50500190565b600061242582611e6a565b8751612435818360208c0161172e565b600160fd1b91019081528651612452816001840160208b0161172e565b6811103bb4b23a341e9160b91b60019290910191820152855161247c81600a840160208a0161172e565b6911103432b4b3b43a1e9160b11b600a929091019182015284516124a781601484016020890161172e565b620111f160ed1b6014929091019182015283516124cb81601784016020880161172e565b01601701979650505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b691e34b6b0b3b2903c1e9160b11b8152855160009061254b81600a850160208b0161172e565b6411103c9e9160d91b600a91840191820152865161257081600f840160208b0161172e565b6811103bb4b23a341e9160b91b600f9290910191820152855161259a816018840160208a0161172e565b6911103432b4b3b43a1e9160b11b6018929091019182015284516125c581602284016020890161172e565b6c1110343932b31e913230ba309d60991b6022929091019182015283516125f381602f84016020880161172e565b0161260b602f8201670ed8985cd94d8d0b60c21b9052565b60370197965050505050505056fe3c7374796c653e23706978656c207b696d6167652d72656e646572696e673a20706978656c617465643b20696d6167652d72656e646572696e673a202d6d6f7a2d63726973702d65646765733b20696d6167652d72656e646572696e673a202d7765626b69742d63726973702d65646765733b202d6d732d696e746572706f6c6174696f6e2d6d6f64653a206e6561726573742d6e65696768626f723b7d3c2f7374796c653e3c2f7376673e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122091535eb1e55d2870af7f7a549aa6a1d9ff3c836b47581cd0756f49ee96e5483d64736f6c634300080d0033";

type RenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Render__factory extends ContractFactory {
  constructor(...args: RenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Render> {
    return super.deploy(overrides || {}) as Promise<Render>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Render {
    return super.attach(address) as Render;
  }
  override connect(signer: Signer): Render__factory {
    return super.connect(signer) as Render__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RenderInterface {
    return new utils.Interface(_abi) as RenderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Render {
    return new Contract(address, _abi, signerOrProvider) as Render;
  }
}
