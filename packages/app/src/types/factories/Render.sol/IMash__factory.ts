/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IMash, IMashInterface } from "../../Render.sol/IMash";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionNr",
        type: "uint256",
      },
    ],
    name: "getCollection",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "maxSupply",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minted",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "xSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ySize",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructs.CollectionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionNr",
        type: "uint256",
      },
    ],
    name: "getLayerNames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IMash__factory {
  static readonly abi = _abi;
  static createInterface(): IMashInterface {
    return new utils.Interface(_abi) as IMashInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IMash {
    return new Contract(address, _abi, signerOrProvider) as IMash;
  }
}
