/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Mash, MashInterface } from "../../Mash.sol/Mash";

const _abi = [
  {
    inputs: [],
    name: "AllTokensMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NoMoreLayersToBeMinted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "notTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "payRightAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contractNr",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "maxSupply",
        type: "uint16",
      },
    ],
    name: "ContractAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contractNr",
        type: "uint256",
      },
    ],
    name: "MintedFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_LAYERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balanceData",
    outputs: [
      {
        internalType: "uint32",
        name: "balance",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "mintedAmount",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "allowListMinted",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_getTokenDataOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes6[7]",
            name: "layers",
            type: "bytes6[7]",
          },
        ],
        internalType: "struct SharedStructs.OwnerStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokenData",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_trueOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "maxSupply",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minted",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "xSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ySize",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructs.CollectionInfo",
        name: "_newCollection",
        type: "tuple",
      },
      {
        internalType: "string[]",
        name: "_layersNames",
        type: "string[]",
      },
    ],
    name: "addCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes6",
        name: "layerInfo",
        type: "bytes6",
      },
      {
        internalType: "uint256",
        name: "layer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collection",
        type: "uint256",
      },
    ],
    name: "changeLayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "array",
        type: "bytes6",
      },
    ],
    name: "decodeContract",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "array",
        type: "bytes6",
      },
    ],
    name: "decodeLayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "collection",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "traitId",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "pfpRender",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "scale",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "xOffset",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "yOffset",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructs.LayerStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionNr",
        type: "uint256",
      },
    ],
    name: "getCollection",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "maxSupply",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minted",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "xSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ySize",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructs.CollectionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionNr",
        type: "uint256",
      },
    ],
    name: "getLayerNames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOperatorFilterEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6[7]",
        name: "layerInfo",
        type: "bytes6[7]",
      },
    ],
    name: "mintAndBuy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintIndex",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6[7]",
        name: "layerInfo",
        type: "bytes6[7]",
      },
    ],
    name: "previewCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "layerNr",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "collection",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "traitId",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "pfpRender",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "scale",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "xOffset",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "yOffset",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructs.LayerStruct",
        name: "_newLayer",
        type: "tuple",
      },
    ],
    name: "previewTokenCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "render",
    outputs: [
      {
        internalType: "contract IRender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRender",
        type: "address",
      },
    ],
    name: "setRender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "iid_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleOperatorFilter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052606e805460ff1916600117905534801561001d57600080fd5b506136688061002d6000396000f3fe6080604052600436106102665760003560e01c8063715018a611610144578063c002d23d116100b6578063da9e40ea1161007a578063da9e40ea14610824578063e6798baa14610839578063e985e9c51461084f578063ef3f0f781461088a578063f0c136cb146108b7578063f2fde38b146108d757600080fd5b8063c002d23d1461079e578063c829b0e3146107b4578063c87b56dd146107c9578063d55f9273146107e9578063d607497a146107ff57600080fd5b8063a0cfcf3511610108578063a0cfcf35146106a8578063a22cb465146106c8578063b0b50ed5146106e8578063b88d4fde1461071e578063b9b7934e1461073e578063ba745f2e1461077157600080fd5b8063715018a61461062b5780638129fc1c146106405780638a8abc6e146106555780638da5cb5b1461067557806395d89b411461069357600080fd5b806342842e0e116101dd57806356b95562116101a157806356b955621461053b5780635a1f3c28146105555780635e7676e1146105825780636352211e146105a25780636b11fdf3146105c257806370a08231146105ef57600080fd5b806342842e0e14610438578063438b6300146104585780634b0ee02a146104855780635266069d146104a5578063562855e71461051b57600080fd5b80630b5225391161022f5780630b522539146103845780630c6dae4e146103a457806318160ddd146103b757806323b872dd146103cc5780632c2cdd60146103ec57806332cb6b0c1461042257600080fd5b80623d47901461026b57806301ffc9a7146102c257806306fdde03146102f2578063081812fc14610314578063095ea7b314610362575b600080fd5b34801561027757600080fd5b506102af610286366004612b7c565b6001600160a01b0316600090815260066020526040902054640100000000900463ffffffff1690565b6040519081526020015b60405180910390f35b3480156102ce57600080fd5b506102e26102dd366004612bad565b6108f7565b60405190151581526020016102b9565b3480156102fe57600080fd5b5061030761097f565b6040516102b99190612c22565b34801561032057600080fd5b5061034a61032f366004612c35565b6008602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102b9565b34801561036e57600080fd5b5061038261037d366004612c4e565b610a0d565b005b34801561039057600080fd5b5061030761039f366004612d07565b610aec565b6103826103b2366004612dc6565b610c08565b3480156103c357600080fd5b506102af610d89565b3480156103d857600080fd5b506103826103e7366004612dee565b610da0565b3480156103f857600080fd5b5061034a610407366004612c35565b6005602052600090815260409020546001600160a01b031681565b34801561042e57600080fd5b506102af610bb881565b34801561044457600080fd5b50610382610453366004612dee565b610e8a565b34801561046457600080fd5b50610478610473366004612b7c565b610f69565b6040516102b99190612e2a565b34801561049157600080fd5b506102af6104a0366004612b7c565b611049565b3480156104b157600080fd5b506104f46104c0366004612b7c565b60066020526000908152604090205463ffffffff808216916401000000008104821691680100000000000000009091041683565b6040805163ffffffff948516815292841660208401529216918101919091526060016102b9565b34801561052757600080fd5b50610382610536366004612e86565b61106d565b34801561054757600080fd5b50606e546102e29060ff1681565b34801561056157600080fd5b50610575610570366004612c35565b6111c7565b6040516102b99190612f09565b34801561058e57600080fd5b5061034a61059d366004612c35565b611260565b3480156105ae57600080fd5b5061034a6105bd366004612c35565b611272565b3480156105ce57600080fd5b506105e26105dd366004612f17565b611286565b6040516102b99190612f87565b3480156105fb57600080fd5b506102af61060a366004612b7c565b6001600160a01b031660009081526006602052604090205463ffffffff1690565b34801561063757600080fd5b5061038261139a565b34801561064c57600080fd5b506103826113ae565b34801561066157600080fd5b50610307610670366004612dc6565b611522565b34801561068157600080fd5b50603c546001600160a01b031661034a565b34801561069f57600080fd5b50610307611608565b3480156106b457600080fd5b506103826106c33660046130c1565b611615565b3480156106d457600080fd5b506103826106e3366004613189565b61172c565b3480156106f457600080fd5b5061034a610703366004612c35565b6007602052600090815260409020546001600160a01b031681565b34801561072a57600080fd5b506103826107393660046131c0565b611801565b34801561074a57600080fd5b5061075f610759366004612f17565b60001a90565b60405160ff90911681526020016102b9565b34801561077d57600080fd5b5061079161078c366004612c35565b6118ee565b6040516102b9919061323c565b3480156107aa57600080fd5b506102af606f5481565b3480156107c057600080fd5b506102af600781565b3480156107d557600080fd5b506103076107e4366004612c35565b611ac1565b3480156107f557600080fd5b506102af60035481565b34801561080b57600080fd5b50606e5461034a9061010090046001600160a01b031681565b34801561083057600080fd5b50610382611c0d565b34801561084557600080fd5b506102af60045481565b34801561085b57600080fd5b506102e261086a36600461328d565b600960209081526000928352604080842090915290825290205460ff1681565b34801561089657600080fd5b506108aa6108a5366004612c35565b611c29565b6040516102b991906132c0565b3480156108c357600080fd5b506103826108d2366004612b7c565b611d15565b3480156108e357600080fd5b506103826108f2366004612b7c565b611d45565b60006301ffc9a760e01b6001600160e01b03198316148061092857506380ac58cd60e01b6001600160e01b03198316145b806109435750635b5e139f60e01b6001600160e01b03198316145b8061095e57506307f5828d60e41b6001600160e01b03198316145b806109795750632483248360e11b6001600160e01b03198316145b92915050565b6001805461098c90613322565b80601f01602080910402602001604051908101604052809291908181526020018280546109b890613322565b8015610a055780601f106109da57610100808354040283529160200191610a05565b820191906000526020600020905b8154815290600101906020018083116109e857829003601f168201915b505050505081565b606e54829060ff168015610a2f57506daaeb6d7670e522a718067333cd4e3b15155b15610add57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab09190613356565b610add57604051633b79c77360e21b81526001600160a01b03821660048201526024015b60405180910390fd5b610ae78383611dbb565b505050565b6060610af66128a1565b60005b6007811015610b6d576000868152600560205260409020610b46906001018260078110610b2857610b28613373565b600591828204019190066006029054906101000a900460d01b611286565b828260078110610b5857610b58613373565b6020020152610b668161339f565b9050610af9565b5082818560078110610b8157610b81613373565b6020020152606e54604051632b83019760e11b81526101009091046001600160a01b031690635706032e90610bba9084906004016133e6565b600060405180830381865afa158015610bd7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bff91908101906133f5565b95945050505050565b610bb8610c13610d89565b610c1e906001613463565b1115610c3d5760405163d05cb60960e01b815260040160405180910390fd5b606f54341015610c60576040516333a868c560e11b815260040160405180910390fd5b6000805b6007811015610d7a57828160078110610c7f57610c7f613373565b602002016020810190610c929190612f17565b60f81c91508115610d6a5760ff821660009081526070602052604090205461ffff600160a01b8204811691610cd191600160b01b90910416600161347b565b61ffff161115610cf45760405163fe2d924760e01b815260040160405180910390fd5b60ff821660009081526070602052604090208054601690610d1f90600160b01b900461ffff166134a1565b91906101000a81548161ffff021916908361ffff1602179055508160ff167f6bd2e2547acef8619b3541a3d71189873347580a5f44dc15e817f0cd407cf3ef60405160405180910390a25b610d738161339f565b9050610c64565b50610d853383611e58565b5050565b6000600454600354610d9b91906134c2565b905090565b606e54839060ff168015610dc257506daaeb6d7670e522a718067333cd4e3b15155b15610e7957336001600160a01b03821603610de757610de2848484611ff0565b610e84565b604051633185c44d60e21b81523060048201523360248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610e36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5a9190613356565b610e7957604051633b79c77360e21b8152336004820152602401610ad4565b610e84848484611ff0565b50505050565b606e54839060ff168015610eac57506daaeb6d7670e522a718067333cd4e3b15155b15610f5e57336001600160a01b03821603610ecc57610de284848461205c565b604051633185c44d60e21b81523060048201523360248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f9190613356565b610f5e57604051633b79c77360e21b8152336004820152602401610ad4565b610e8484848461205c565b60606000610f92836001600160a01b031660009081526006602052604090205463ffffffff1690565b905060008167ffffffffffffffff811115610faf57610faf612c78565b604051908082528060200260200182016040528015610fd8578160200160208202803683370190505b506004549091506000905b8382101561103f57856001600160a01b0316610ffe82611272565b6001600160a01b031603611037578083836110188161339f565b94508151811061102a5761102a613373565b6020026020010181815250505b600101610fe3565b5090949350505050565b6001600160a01b03811660009081526006602052604081205463ffffffff16610979565b6000848152600560205260409020546001600160a01b031633146110a4576040516348f2abcb60e11b815260040160405180910390fd5b60008181526070602052604090205461ffff600160a01b82048116916110d491600160b01b90910416600161347b565b61ffff1611156110f757604051634db085a760e01b815260040160405180910390fd5b6000818152607060205260409020805460169061111e90600160b01b900461ffff166134a1565b91906101000a81548161ffff021916908361ffff1602179055508260056000868152602001908152602001600020600101836007811061116057611160613373565b600591828204019190066006026101000a81548165ffffffffffff021916908360d01c02179055507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7846040516111b991815260200190565b60405180910390a150505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260706020908152604091829020825160a08101845290546001600160a01b038116825261ffff600160a01b8204811693830193909352600160b01b81049092169281019290925260ff600160c01b820481166060840152600160c81b90910416608082015290565b600061126b826118ee565b5192915050565b60008061127e836118ee565b519392505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529082811a90600184811a91600286901a91600387901a60071c8116146112e55760006112e8565b60015b60408051808201909152600681526539b1b0b6329d60d11b6020820152909150607f600388901a1690600488901a90600589901a906113279084612077565b6113536040518060400160405280600a8152602001693833382932b73232b91d60b11b815250856120bc565b6040805160e08101825260ff9889168152968816602088015294871694860194909452911515606085015284166080840152831660a083015290911660c082015292915050565b6113a2612101565b6113ac600061215b565b565b600054610100900460ff16158080156113ce5750600054600160ff909116105b806113e85750303b1580156113e8575060005460ff166001145b61144b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610ad4565b6000805460ff19166001179055801561146e576000805461ff0019166101001790555b6114b96040518060400160405280600d81526020016c092dcc8cad8d2c4d8ca9ac2e6d609b1b81525060405180604001604052806002815260200161494d60f01b81525060016121ad565b6114c1612208565b6114c9612237565b6611c37937e08000606f556001607255801561151f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b606061152c6128a1565b60005b60078110156115875761156084826007811061154d5761154d613373565b6020020160208101906105dd9190612f17565b82826007811061157257611572613373565b60200201526115808161339f565b905061152f565b50606e54604051632b83019760e11b81526101009091046001600160a01b031690635706032e906115bc9084906004016133e6565b600060405180830381865afa1580156115d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261160191908101906133f5565b9392505050565b6002805461098c90613322565b61161d612101565b60728054600090815260706020908152604080832086518154888501518985015160608b015160808c01516001600160a01b039095166001600160b01b031990941693909317600160a01b61ffff938416021762ffffff60b01b1916600160b01b929091169190910260ff60c01b191617600160c01b60ff928316021760ff60c81b1916600160c81b9190921602179055925482526071815291902082516116c7928401906128fc565b50815160725460208085015160405161ffff90911681526001600160a01b03909316927fbee0b7e907c247d44b95829b99daa1a1fe94150ddd0a468f8720395295cc2687910160405180910390a36072600081546117249061339f565b909155505050565b606e54829060ff16801561174e57506daaeb6d7670e522a718067333cd4e3b15155b156117f757604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa1580156117ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cf9190613356565b6117f757604051633b79c77360e21b81526001600160a01b0382166004820152602401610ad4565b610ae7838361227d565b606e54849060ff16801561182357506daaeb6d7670e522a718067333cd4e3b15155b156118db57336001600160a01b038216036118495761184485858585612288565b6118e7565b604051633185c44d60e21b81523060048201523360248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015611898573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bc9190613356565b6118db57604051633b79c77360e21b8152336004820152602401610ad4565b6118e785858585612288565b5050505050565b6118f6612959565b6004548210156119485760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e49642062656c6f77207374617274696e67204964210000000000006044820152606401610ad4565b6000828152600560205260409020546001600160a01b031615158061196f57506003548210155b15611a055760008281526005602090815260408083208151808301835281546001600160a01b03168152825160e081019384905290949193850192909160018501916007918390855b82829054906101000a900460d01b6001600160d01b031916815260200190600601906020826005010492830192600103820291508084116119b85790505050505050815250509050919050565b815b6000818152600760205260409020546001600160a01b0316611a2c5760001901611a07565b60008181526007602081815260408084208151808301835281546001600160a01b03168152825160e08101938490529095919493860193909260018601928390855b82829054906101000a900460d01b6001600160d01b03191681526020019060060190602082600501049283019260010382029150808411611a6e579050505050505081525050915050919050565b919050565b6060611acb6128a1565b611ad3612981565b60005b6007811015611b87576000858152600560205260409020611b05906001018260078110610b2857610b28613373565b838260078110611b1757611b17613373565b6020020152828160078110611b2e57611b2e613373565b60200201515160ff1615611b7757611b5f838260078110611b5157611b51613373565b60200201515160ff166111c7565b828260078110611b7157611b71613373565b60200201525b611b808161339f565b9050611ad6565b50606e5460405163643c5b9f60e11b81526101009091046001600160a01b03169063c878b73e90611bc0908790869086906004016134d9565b600060405180830381865afa158015611bdd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c0591908101906133f5565b949350505050565b611c15612101565b606e805460ff19811660ff90911615179055565b606060716000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611d0a578382906000526020600020018054611c7d90613322565b80601f0160208091040260200160405190810160405280929190818152602001828054611ca990613322565b8015611cf65780601f10611ccb57610100808354040283529160200191611cf6565b820191906000526020600020905b815481529060010190602001808311611cd957829003601f168201915b505050505081526020019060010190611c5e565b505050509050919050565b611d1d612101565b606e80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b611d4d612101565b6001600160a01b038116611db25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ad4565b61151f8161215b565b6000611dc682611272565b90506001600160a01b038116331480611e0257506001600160a01b038116600090815260096020908152604080832033845290915290205460ff165b611e4e5760405162461bcd60e51b815260206004820152601f60248201527f455243373231473a20617070726f7665206e6f7420617574686f72697a6564006044820152606401610ad4565b610ae783836123e6565b6001600160a01b038216611eae5760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f6d696e74496e7465726e616c20746f203078300000006044820152606401610ad4565b6003546000611ebe826001613463565b90506040518060400160405280856001600160a01b0316815260200184600780602002604051908101604052809291908260076020028082843760009201829052509290935250848152600560209081526040909120835181546001600160a01b0319166001600160a01b0390911617815590830151909150611f4790600183019060076129ce565b5050506001600160a01b0384166000908152600660205260409020805464010000000063ffffffff8083166001908101821663ffffffff1985168117849004831690910190911690910267ffffffffffffffff19909216171790555b60405182906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808260010192508210611fa357600355505050565b611ffa3382612454565b6120515760405162461bcd60e51b815260206004820152602260248201527f455243373231473a207472616e7366657246726f6d20756e617574686f72697a604482015261195960f21b6064820152608401610ad4565b610ae78383836124d2565b610ae783838360405180602001604052806000815250611801565b610d85828260405160240161208d92919061352b565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052612644565b610d8582826040516024016120d292919061354d565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b179052612644565b603c546001600160a01b031633146113ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ad4565b603c80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166121d45760405162461bcd60e51b8152600401610ad490613571565b82516121e7906001906020860190612a67565b5081516121fb906002906020850190612a67565b5060038190556004555050565b600054610100900460ff1661222f5760405162461bcd60e51b8152600401610ad490613571565b6113ac612665565b600054610100900460ff1661225e5760405162461bcd60e51b8152600401610ad490613571565b6113ac733cc6cdda760b79bafa08df41ecfa224f810dceb66001612695565b610d85338383612834565b612293848484610da0565b6001600160a01b0383163b15610e84576000836001600160a01b031663150b7a02338786866040516024016122cb94939291906135bc565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161230491906135f9565b6000604051808303816000865af19150503d8060008114612341576040519150601f19603f3d011682016040523d82523d6000602084013e612346565b606091505b509150506000818060200190518101906123609190613615565b9050630a85bd0160e11b6001600160e01b03198216146123de5760405162461bcd60e51b815260206004820152603360248201527f455243373231473a20736166655472616e7366657246726f6d20746f5f206e6f6044820152726e2d45524337323152656365697661626c652160681b6064820152608401610ad4565b505050505050565b600081815260086020526040902080546001600160a01b0319166001600160a01b038416908117909155819061241b82611272565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061246083611272565b9050836001600160a01b0316816001600160a01b0316148061249b57506000838152600860205260409020546001600160a01b038581169116145b80611c0557506001600160a01b0380821660009081526009602090815260408083209388168352929052205460ff16949350505050565b6124db81611272565b6001600160a01b0316836001600160a01b03161461253b5760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f7472616e7366657220213d206f776e65724f660000006044820152606401610ad4565b6001600160a01b0382166125915760405162461bcd60e51b815260206004820152601960248201527f455243373231473a205f7472616e7366657220746f20307830000000000000006044820152606401610ad4565b600081815260086020908152604080832080546001600160a01b03199081169091556005835281842080549091166001600160a01b038781169182179092559087168085526006909352818420805463ffffffff1980821663ffffffff928316600019018316179092558286528386208054928316928216600101909116919091179055905184939192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600054610100900460ff1661268c5760405162461bcd60e51b8152600401610ad490613571565b6113ac3361215b565b600054610100900460ff166126bc5760405162461bcd60e51b8152600401610ad490613571565b6daaeb6d7670e522a718067333cd4e3b15610d855760405163c3c5a54760e01b81523060048201526daaeb6d7670e522a718067333cd4e9063c3c5a547906024016020604051808303816000875af115801561271c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127409190613356565b610d855780156127b457604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156127a057600080fd5b505af11580156123de573d6000803e3d6000fd5b6001600160a01b038216156128035760405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af290390604401612786565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401612786565b6001600160a01b03838116600081815260096020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6040518060e001604052806007905b6040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282526000199092019101816128b05790505090565b828054828255906000526020600020908101928215612949579160200282015b828111156129495782518051612939918491602090910190612a67565b509160200191906001019061291c565b50612955929150612adb565b5090565b604051806040016040528060006001600160a01b0316815260200161297c612af8565b905290565b6040518060e001604052806007905b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816129905790505090565b600283019183908215612a5b5791602002820160005b83821115612a2757835183826101000a81548165ffffffffffff021916908360d01c021790555092602001926006016020816005010492830192600103026129e4565b8015612a595782816101000a81549065ffffffffffff0219169055600601602081600501049283019260010302612a27565b505b50612955929150612b16565b828054612a7390613322565b90600052602060002090601f016020900481019282612a955760008555612a5b565b82601f10612aae57805160ff1916838001178555612a5b565b82800160010185558215612a5b579182015b82811115612a5b578251825591602001919060010190612ac0565b80821115612955576000612aef8282612b2b565b50600101612adb565b6040518060e001604052806007906020820280368337509192915050565b5b808211156129555760008155600101612b17565b508054612b3790613322565b6000825580601f10612b47575050565b601f01602090049060005260206000209081019061151f9190612b16565b80356001600160a01b0381168114611abc57600080fd5b600060208284031215612b8e57600080fd5b61160182612b65565b6001600160e01b03198116811461151f57600080fd5b600060208284031215612bbf57600080fd5b813561160181612b97565b60005b83811015612be5578181015183820152602001612bcd565b83811115610e845750506000910152565b60008151808452612c0e816020860160208601612bca565b601f01601f19169290920160200192915050565b6020815260006116016020830184612bf6565b600060208284031215612c4757600080fd5b5035919050565b60008060408385031215612c6157600080fd5b612c6a83612b65565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612cb157612cb1612c78565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612ce057612ce0612c78565b604052919050565b803560ff81168114611abc57600080fd5b801515811461151f57600080fd5b6000806000838503610120811215612d1e57600080fd5b843593506020850135925060e0603f1982011215612d3b57600080fd5b50612d44612c8e565b612d5060408601612ce8565b8152612d5e60608601612ce8565b6020820152612d6f60808601612ce8565b604082015260a0850135612d8281612cf9565b6060820152612d9360c08601612ce8565b6080820152612da460e08601612ce8565b60a0820152612db66101008601612ce8565b60c0820152809150509250925092565b600060e08284031215612dd857600080fd5b8260e083011115612de857600080fd5b50919050565b600080600060608486031215612e0357600080fd5b612e0c84612b65565b9250612e1a60208501612b65565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612e6257835183529284019291840191600101612e46565b50909695505050505050565b80356001600160d01b031981168114611abc57600080fd5b60008060008060808587031215612e9c57600080fd5b84359350612eac60208601612e6e565b93969395505050506040820135916060013590565b60018060a01b038151168252602081015161ffff8082166020850152806040840151166040850152505060ff606082015116606083015260ff60808201511660808301525050565b60a081016109798284612ec1565b600060208284031215612f2957600080fd5b61160182612e6e565b60ff8082511683528060208301511660208401528060408301511660408401526060820151151560608401528060808301511660808401528060a08301511660a08401528060c08301511660c0840152505050565b60e081016109798284612f32565b803561ffff81168114611abc57600080fd5b600067ffffffffffffffff821115612fc157612fc1612c78565b50601f01601f191660200190565b6000612fe2612fdd84612fa7565b612cb7565b9050828152838383011115612ff657600080fd5b828260208301376000602084830101529392505050565b600082601f83011261301e57600080fd5b8135602067ffffffffffffffff8083111561303b5761303b612c78565b8260051b61304a838201612cb7565b938452858101830193838101908886111561306457600080fd5b84880192505b858310156130b5578235848111156130825760008081fd5b8801603f81018a136130945760008081fd5b6130a58a8783013560408401612fcf565b835250918401919084019061306a565b98975050505050505050565b60008082840360c08112156130d557600080fd5b60a08112156130e357600080fd5b5060405160a0810167ffffffffffffffff828210818311171561310857613108612c78565b8160405261311586612b65565b835261312360208701612f95565b602084015261313460408701612f95565b604084015261314560608701612ce8565b606084015261315660808701612ce8565b608084015291935060a0850135918083111561317157600080fd5b505061317f8582860161300d565b9150509250929050565b6000806040838503121561319c57600080fd5b6131a583612b65565b915060208301356131b581612cf9565b809150509250929050565b600080600080608085870312156131d657600080fd5b6131df85612b65565b93506131ed60208601612b65565b925060408501359150606085013567ffffffffffffffff81111561321057600080fd5b8501601f8101871361322157600080fd5b61323087823560208401612fcf565b91505092959194509250565b81516001600160a01b031681526020808301516101008301919081840160005b60078110156132835782516001600160d01b0319168252918301919083019060010161325c565b5050505092915050565b600080604083850312156132a057600080fd5b6132a983612b65565b91506132b760208401612b65565b90509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561331557603f19888603018452613303858351612bf6565b945092850192908501906001016132e7565b5092979650505050505050565b600181811c9082168061333657607f821691505b602082108103612de857634e487b7160e01b600052602260045260246000fd5b60006020828403121561336857600080fd5b815161160181612cf9565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016133b1576133b1613389565b5060010190565b8060005b6007811015610e84576133d0848351612f32565b60e09390930192602091909101906001016133bc565b610620810161097982846133b8565b60006020828403121561340757600080fd5b815167ffffffffffffffff81111561341e57600080fd5b8201601f8101841361342f57600080fd5b805161343d612fdd82612fa7565b81815285602083850101111561345257600080fd5b610bff826020830160208601612bca565b6000821982111561347657613476613389565b500190565b600061ffff80831681851680830382111561349857613498613389565b01949350505050565b600061ffff8083168181036134b8576134b8613389565b6001019392505050565b6000828210156134d4576134d4613389565b500390565b838152610aa0810160206134ef818401866133b8565b61064083018460005b600781101561351f5761350c838351612ec1565b60a09290920191908301906001016134f8565b50505050949350505050565b60408152600061353e6040830185612bf6565b90508260208301529392505050565b6040815260006135606040830185612bf6565b905082151560208301529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906135ef90830184612bf6565b9695505050505050565b6000825161360b818460208701612bca565b9190910192915050565b60006020828403121561362757600080fd5b815161160181612b9756fea26469706673582212201c10d2cbd8545f9eb323f1cdef26a5975588331cfface4783b79a4c060701c9164736f6c634300080d0033";

type MashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mash__factory extends ContractFactory {
  constructor(...args: MashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Mash> {
    return super.deploy(overrides || {}) as Promise<Mash>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Mash {
    return super.attach(address) as Mash;
  }
  override connect(signer: Signer): Mash__factory {
    return super.connect(signer) as Mash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MashInterface {
    return new utils.Interface(_abi) as MashInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Mash {
    return new Contract(address, _abi, signerOrProvider) as Mash;
  }
}
