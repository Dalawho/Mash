/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Mash, MashInterface } from "../../Mash.sol/Mash";

const _abi = [
  {
    inputs: [],
    name: "AllTokensMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NoMoreLayersToBeMinted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "mintNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "notTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "payRightAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contractNr",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "maxSupply",
        type: "uint16",
      },
    ],
    name: "ContractAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contractNr",
        type: "uint256",
      },
    ],
    name: "MintedFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_LAYERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balanceData",
    outputs: [
      {
        internalType: "uint32",
        name: "balance",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "mintedAmount",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "allowListMinted",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_getTokenDataOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes6[7]",
            name: "layers",
            type: "bytes6[7]",
          },
        ],
        internalType: "struct SharedStructs.OwnerStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokenData",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "_trueOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "maxSupply",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minted",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "xSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ySize",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructs.CollectionInfo",
        name: "_newCollection",
        type: "tuple",
      },
      {
        internalType: "string[]",
        name: "_layersNames",
        type: "string[]",
      },
    ],
    name: "addCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes6",
        name: "layerInfo",
        type: "bytes6",
      },
      {
        internalType: "uint256",
        name: "layer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collection",
        type: "uint256",
      },
    ],
    name: "changeLayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "array",
        type: "bytes6",
      },
    ],
    name: "decodeContract",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "array",
        type: "bytes6",
      },
    ],
    name: "decodeLayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "collection",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "traitId",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "pfpRender",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "scale",
            type: "uint8",
          },
          {
            internalType: "int8",
            name: "xOffset",
            type: "int8",
          },
          {
            internalType: "int8",
            name: "yOffset",
            type: "int8",
          },
        ],
        internalType: "struct SharedStructs.LayerStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_collectionNr",
        type: "uint256",
      },
    ],
    name: "getCollection",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "maxSupply",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "minted",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "xSize",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ySize",
            type: "uint8",
          },
        ],
        internalType: "struct SharedStructs.CollectionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collectionNr",
        type: "uint256",
      },
    ],
    name: "getLayerNames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOperatorFilterEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6[7]",
        name: "layerInfo",
        type: "bytes6[7]",
      },
    ],
    name: "mintAndBuy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintIndex",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6[7]",
        name: "layerInfo",
        type: "bytes6[7]",
      },
    ],
    name: "previewCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "layerNr",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "collection",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "layerId",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "traitId",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "pfpRender",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "scale",
            type: "uint8",
          },
          {
            internalType: "int8",
            name: "xOffset",
            type: "int8",
          },
          {
            internalType: "int8",
            name: "yOffset",
            type: "int8",
          },
        ],
        internalType: "struct SharedStructs.LayerStruct",
        name: "_newLayer",
        type: "tuple",
      },
    ],
    name: "previewTokenCollage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "render",
    outputs: [
      {
        internalType: "contract IRender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setMintActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRender",
        type: "address",
      },
    ],
    name: "setRender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "iid_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleOperatorFilter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052606e805460ff1916600117905534801561001d57600080fd5b506137258061002d6000396000f3fe6080604052600436106102875760003560e01c806370a082311161015a578063ba745f2e116100c1578063da9e40ea1161007a578063da9e40ea14610893578063e6798baa146108a8578063e985e9c5146108be578063ef3f0f78146108f9578063f0c136cb14610926578063f2fde38b1461094657600080fd5b8063ba745f2e146107e0578063c002d23d1461080d578063c829b0e314610823578063c87b56dd14610838578063d55f927314610858578063d607497a1461086e57600080fd5b806395d89b411161011357806395d89b4114610702578063a0cfcf3514610717578063a22cb46514610737578063b0b50ed514610757578063b88d4fde1461078d578063b9b7934e146107ad57600080fd5b806370a082311461063e578063715018a61461067a5780637e34a9661461068f5780638129fc1c146106af5780638a8abc6e146106c45780638da5cb5b146106e457600080fd5b80633ccfd60b116101fe57806356b95562116101b757806356b955621461056b57806358cd080c146105855780635a1f3c28146105a45780635e7676e1146105d15780636352211e146105f15780636b11fdf31461061157600080fd5b80633ccfd60b1461045357806342842e0e14610468578063438b6300146104885780634b0ee02a146104b55780635266069d146104d5578063562855e71461054b57600080fd5b80630c6dae4e116102505780630c6dae4e146103a557806318160ddd146103b857806323b872dd146103cd57806325fd90f3146103ed5780632c2cdd601461040757806332cb6b0c1461043d57600080fd5b80623d47901461028c57806301ffc9a7146102e357806306fdde0314610313578063081812fc14610335578063095ea7b314610383575b600080fd5b34801561029857600080fd5b506102d06102a7366004612c24565b6001600160a01b0316600090815260066020526040902054640100000000900463ffffffff1690565b6040519081526020015b60405180910390f35b3480156102ef57600080fd5b506103036102fe366004612c55565b610966565b60405190151581526020016102da565b34801561031f57600080fd5b506103286109ee565b6040516102da9190612cca565b34801561034157600080fd5b5061036b610350366004612cdd565b6008602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102da565b34801561038f57600080fd5b506103a361039e366004612cf6565b610a7c565b005b6103a36103b3366004612d20565b610b5b565b3480156103c457600080fd5b506102d0610cff565b3480156103d957600080fd5b506103a36103e8366004612d48565b610d16565b3480156103f957600080fd5b506070546103039060ff1681565b34801561041357600080fd5b5061036b610422366004612cdd565b6005602052600090815260409020546001600160a01b031681565b34801561044957600080fd5b506102d0610bb881565b34801561045f57600080fd5b506103a3610e00565b34801561047457600080fd5b506103a3610483366004612d48565b610e0a565b34801561049457600080fd5b506104a86104a3366004612c24565b610ee9565b6040516102da9190612d84565b3480156104c157600080fd5b506102d06104d0366004612c24565b610fc9565b3480156104e157600080fd5b506105246104f0366004612c24565b60066020526000908152604090205463ffffffff808216916401000000008104821691680100000000000000009091041683565b6040805163ffffffff948516815292841660208401529216918101919091526060016102da565b34801561055757600080fd5b506103a3610566366004612de0565b610fed565b34801561057757600080fd5b50606e546103039060ff1681565b34801561059157600080fd5b506103a36070805460ff19166001179055565b3480156105b057600080fd5b506105c46105bf366004612cdd565b611147565b6040516102da9190612e63565b3480156105dd57600080fd5b5061036b6105ec366004612cdd565b6111e0565b3480156105fd57600080fd5b5061036b61060c366004612cdd565b6111f2565b34801561061d57600080fd5b5061063161062c366004612e71565b611206565b6040516102da9190612ee4565b34801561064a57600080fd5b506102d0610659366004612c24565b6001600160a01b031660009081526006602052604090205463ffffffff1690565b34801561068657600080fd5b506103a361131e565b34801561069b57600080fd5b506103286106aa366004612f93565b611330565b3480156106bb57600080fd5b506103a361144c565b3480156106d057600080fd5b506103286106df366004612d20565b6115ca565b3480156106f057600080fd5b50603c546001600160a01b031661036b565b34801561070e57600080fd5b506103286116b0565b34801561072357600080fd5b506103a361073236600461317e565b6116bd565b34801561074357600080fd5b506103a3610752366004613246565b6117d4565b34801561076357600080fd5b5061036b610772366004612cdd565b6007602052600090815260409020546001600160a01b031681565b34801561079957600080fd5b506103a36107a836600461327d565b6118a9565b3480156107b957600080fd5b506107ce6107c8366004612e71565b60001a90565b60405160ff90911681526020016102da565b3480156107ec57600080fd5b506108006107fb366004612cdd565b611996565b6040516102da91906132f9565b34801561081957600080fd5b506102d0606f5481565b34801561082f57600080fd5b506102d0600781565b34801561084457600080fd5b50610328610853366004612cdd565b611b69565b34801561086457600080fd5b506102d060035481565b34801561087a57600080fd5b50606e5461036b9061010090046001600160a01b031681565b34801561089f57600080fd5b506103a3611cb5565b3480156108b457600080fd5b506102d060045481565b3480156108ca57600080fd5b506103036108d936600461334a565b600960209081526000928352604080842090915290825290205460ff1681565b34801561090557600080fd5b50610919610914366004612cdd565b611cd1565b6040516102da919061337d565b34801561093257600080fd5b506103a3610941366004612c24565b611dbd565b34801561095257600080fd5b506103a3610961366004612c24565b611ded565b60006301ffc9a760e01b6001600160e01b03198316148061099757506380ac58cd60e01b6001600160e01b03198316145b806109b25750635b5e139f60e01b6001600160e01b03198316145b806109cd57506307f5828d60e41b6001600160e01b03198316145b806109e85750632483248360e11b6001600160e01b03198316145b92915050565b600180546109fb906133df565b80601f0160208091040260200160405190810160405280929190818152602001828054610a27906133df565b8015610a745780601f10610a4957610100808354040283529160200191610a74565b820191906000526020600020905b815481529060010190602001808311610a5757829003601f168201915b505050505081565b606e54829060ff168015610a9e57506daaeb6d7670e522a718067333cd4e3b15155b15610b4c57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1f9190613413565b610b4c57604051633b79c77360e21b81526001600160a01b03821660048201526024015b60405180910390fd5b610b568383611e63565b505050565b60705460ff16610b7e57604051633986074560e21b815260040160405180910390fd5b610bb8610b89610cff565b610b94906001613446565b1115610bb35760405163d05cb60960e01b815260040160405180910390fd5b606f54341015610bd6576040516333a868c560e11b815260040160405180910390fd5b6000805b6007811015610cf057828160078110610bf557610bf561345e565b602002016020810190610c089190612e71565b60f81c91508115610ce05760ff821660009081526071602052604090205461ffff600160a01b8204811691610c4791600160b01b909104166001613474565b61ffff161115610c6a5760405163fe2d924760e01b815260040160405180910390fd5b60ff821660009081526071602052604090208054601690610c9590600160b01b900461ffff1661349a565b91906101000a81548161ffff021916908361ffff1602179055508160ff167f6bd2e2547acef8619b3541a3d71189873347580a5f44dc15e817f0cd407cf3ef60405160405180910390a25b610ce9816134bb565b9050610bda565b50610cfb3383611f00565b5050565b6000600454600354610d1191906134d4565b905090565b606e54839060ff168015610d3857506daaeb6d7670e522a718067333cd4e3b15155b15610def57336001600160a01b03821603610d5d57610d58848484612098565b610dfa565b604051633185c44d60e21b81523060048201523360248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610dac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd09190613413565b610def57604051633b79c77360e21b8152336004820152602401610b43565b610dfa848484612098565b50505050565b610e08612104565b565b606e54839060ff168015610e2c57506daaeb6d7670e522a718067333cd4e3b15155b15610ede57336001600160a01b03821603610e4c57610d5884848461215e565b604051633185c44d60e21b81523060048201523360248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf9190613413565b610ede57604051633b79c77360e21b8152336004820152602401610b43565b610dfa84848461215e565b60606000610f12836001600160a01b031660009081526006602052604090205463ffffffff1690565b905060008167ffffffffffffffff811115610f2f57610f2f612ef2565b604051908082528060200260200182016040528015610f58578160200160208202803683370190505b506004549091506000905b83821015610fbf57856001600160a01b0316610f7e826111f2565b6001600160a01b031603610fb757808383610f98816134bb565b945081518110610faa57610faa61345e565b6020026020010181815250505b600101610f63565b5090949350505050565b6001600160a01b03811660009081526006602052604081205463ffffffff166109e8565b6000848152600560205260409020546001600160a01b03163314611024576040516348f2abcb60e11b815260040160405180910390fd5b60008181526071602052604090205461ffff600160a01b820481169161105491600160b01b909104166001613474565b61ffff16111561107757604051634db085a760e01b815260040160405180910390fd5b6000818152607160205260409020805460169061109e90600160b01b900461ffff1661349a565b91906101000a81548161ffff021916908361ffff160217905550826005600086815260200190815260200160002060010183600781106110e0576110e061345e565b600591828204019190066006026101000a81548165ffffffffffff021916908360d01c02179055507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78460405161113991815260200190565b60405180910390a150505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260716020908152604091829020825160a08101845290546001600160a01b038116825261ffff600160a01b8204811693830193909352600160b01b81049092169281019290925260ff600160c01b820481166060840152600160c81b90910416608082015290565b60006111eb82611996565b5192915050565b6000806111fe83611996565b519392505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529082811a90600184811a91600286901a91600387901a60071c811614611265576000611268565b60015b60408051808201909152600681526539b1b0b6329d60d11b6020820152909150607f600388901a1690600488901a90600589901a906112a79084612179565b6112d36040518060400160405280600a8152602001693833382932b73232b91d60b11b815250856121be565b6040805160e08101825260ff988916815296881660208801529487169486019490945291151560608501529093166080830152600092830b60a083015290910b60c082015292915050565b611326612104565b610e086000612203565b606061133a612949565b60005b60078110156113b157600086815260056020526040902061138a90600101826007811061136c5761136c61345e565b600591828204019190066006029054906101000a900460d01b611206565b82826007811061139c5761139c61345e565b60200201526113aa816134bb565b905061133d565b50828185600781106113c5576113c561345e565b6020020152606e54604051637886289360e01b81526101009091046001600160a01b0316906378862893906113fe908490600401613519565b600060405180830381865afa15801561141b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114439190810190613528565b95945050505050565b600054610100900460ff161580801561146c5750600054600160ff909116105b806114865750303b158015611486575060005460ff166001145b6114e95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b43565b6000805460ff19166001179055801561150c576000805461ff0019166101001790555b6115576040518060400160405280600d81526020016c092dcc8cad8d2c4d8ca9ac2e6d609b1b81525060405180604001604052806002815260200161494d60f01b8152506001612255565b61155f6122b0565b6115676122df565b6611c37937e08000606f5560016073556070805460ff1916905580156115c7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b60606115d4612949565b60005b600781101561162f576116088482600781106115f5576115f561345e565b60200201602081019061062c9190612e71565b82826007811061161a5761161a61345e565b6020020152611628816134bb565b90506115d7565b50606e54604051637886289360e01b81526101009091046001600160a01b031690637886289390611664908490600401613519565b600060405180830381865afa158015611681573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116a99190810190613528565b9392505050565b600280546109fb906133df565b6116c5612104565b60738054600090815260716020908152604080832086518154888501518985015160608b015160808c01516001600160a01b039095166001600160b01b031990941693909317600160a01b61ffff938416021762ffffff60b01b1916600160b01b929091169190910260ff60c01b191617600160c01b60ff928316021760ff60c81b1916600160c81b91909216021790559254825260728152919020825161176f928401906129a4565b50815160735460208085015160405161ffff90911681526001600160a01b03909316927fbee0b7e907c247d44b95829b99daa1a1fe94150ddd0a468f8720395295cc2687910160405180910390a36073600081546117cc906134bb565b909155505050565b606e54829060ff1680156117f657506daaeb6d7670e522a718067333cd4e3b15155b1561189f57604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015611853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118779190613413565b61189f57604051633b79c77360e21b81526001600160a01b0382166004820152602401610b43565b610b568383612325565b606e54849060ff1680156118cb57506daaeb6d7670e522a718067333cd4e3b15155b1561198357336001600160a01b038216036118f1576118ec85858585612330565b61198f565b604051633185c44d60e21b81523060048201523360248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015611940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119649190613413565b61198357604051633b79c77360e21b8152336004820152602401610b43565b61198f85858585612330565b5050505050565b61199e612a01565b6004548210156119f05760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e49642062656c6f77207374617274696e67204964210000000000006044820152606401610b43565b6000828152600560205260409020546001600160a01b0316151580611a1757506003548210155b15611aad5760008281526005602090815260408083208151808301835281546001600160a01b03168152825160e081019384905290949193850192909160018501916007918390855b82829054906101000a900460d01b6001600160d01b03191681526020019060060190602082600501049283019260010382029150808411611a605790505050505050815250509050919050565b815b6000818152600760205260409020546001600160a01b0316611ad45760001901611aaf565b60008181526007602081815260408084208151808301835281546001600160a01b03168152825160e08101938490529095919493860193909260018601928390855b82829054906101000a900460d01b6001600160d01b03191681526020019060060190602082600501049283019260010382029150808411611b16579050505050505081525050915050919050565b919050565b6060611b73612949565b611b7b612a29565b60005b6007811015611c2f576000858152600560205260409020611bad90600101826007811061136c5761136c61345e565b838260078110611bbf57611bbf61345e565b6020020152828160078110611bd657611bd661345e565b60200201515160ff1615611c1f57611c07838260078110611bf957611bf961345e565b60200201515160ff16611147565b828260078110611c1957611c1961345e565b60200201525b611c28816134bb565b9050611b7e565b50606e5460405163099255b960e41b81526101009091046001600160a01b0316906399255b9090611c6890879086908690600401613596565b600060405180830381865afa158015611c85573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611cad9190810190613528565b949350505050565b611cbd612104565b606e805460ff19811660ff90911615179055565b606060726000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611db2578382906000526020600020018054611d25906133df565b80601f0160208091040260200160405190810160405280929190818152602001828054611d51906133df565b8015611d9e5780601f10611d7357610100808354040283529160200191611d9e565b820191906000526020600020905b815481529060010190602001808311611d8157829003601f168201915b505050505081526020019060010190611d06565b505050509050919050565b611dc5612104565b606e80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b611df5612104565b6001600160a01b038116611e5a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b43565b6115c781612203565b6000611e6e826111f2565b90506001600160a01b038116331480611eaa57506001600160a01b038116600090815260096020908152604080832033845290915290205460ff165b611ef65760405162461bcd60e51b815260206004820152601f60248201527f455243373231473a20617070726f7665206e6f7420617574686f72697a6564006044820152606401610b43565b610b56838361248e565b6001600160a01b038216611f565760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f6d696e74496e7465726e616c20746f203078300000006044820152606401610b43565b6003546000611f66826001613446565b90506040518060400160405280856001600160a01b0316815260200184600780602002604051908101604052809291908260076020028082843760009201829052509290935250848152600560209081526040909120835181546001600160a01b0319166001600160a01b0390911617815590830151909150611fef9060018301906007612a76565b5050506001600160a01b0384166000908152600660205260409020805464010000000063ffffffff8083166001908101821663ffffffff1985168117849004831690910190911690910267ffffffffffffffff19909216171790555b60405182906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480826001019250821061204b57600355505050565b6120a233826124fc565b6120f95760405162461bcd60e51b815260206004820152602260248201527f455243373231473a207472616e7366657246726f6d20756e617574686f72697a604482015261195960f21b6064820152608401610b43565b610b5683838361257a565b603c546001600160a01b03163314610e085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b43565b610b56838383604051806020016040528060008152506118a9565b610cfb828260405160240161218f9291906135e8565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526126ec565b610cfb82826040516024016121d492919061360a565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b1790526126ec565b603c80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661227c5760405162461bcd60e51b8152600401610b439061362e565b825161228f906001906020860190612b0f565b5081516122a3906002906020850190612b0f565b5060038190556004555050565b600054610100900460ff166122d75760405162461bcd60e51b8152600401610b439061362e565b610e0861270d565b600054610100900460ff166123065760405162461bcd60e51b8152600401610b439061362e565b610e08733cc6cdda760b79bafa08df41ecfa224f810dceb6600161273d565b610cfb3383836128dc565b61233b848484610d16565b6001600160a01b0383163b15610dfa576000836001600160a01b031663150b7a02338786866040516024016123739493929190613679565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516123ac91906136b6565b6000604051808303816000865af19150503d80600081146123e9576040519150601f19603f3d011682016040523d82523d6000602084013e6123ee565b606091505b5091505060008180602001905181019061240891906136d2565b9050630a85bd0160e11b6001600160e01b03198216146124865760405162461bcd60e51b815260206004820152603360248201527f455243373231473a20736166655472616e7366657246726f6d20746f5f206e6f6044820152726e2d45524337323152656365697661626c652160681b6064820152608401610b43565b505050505050565b600081815260086020526040902080546001600160a01b0319166001600160a01b03841690811790915581906124c3826111f2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080612508836111f2565b9050836001600160a01b0316816001600160a01b0316148061254357506000838152600860205260409020546001600160a01b038581169116145b80611cad57506001600160a01b0380821660009081526009602090815260408083209388168352929052205460ff16949350505050565b612583816111f2565b6001600160a01b0316836001600160a01b0316146125e35760405162461bcd60e51b815260206004820152601d60248201527f455243373231473a205f7472616e7366657220213d206f776e65724f660000006044820152606401610b43565b6001600160a01b0382166126395760405162461bcd60e51b815260206004820152601960248201527f455243373231473a205f7472616e7366657220746f20307830000000000000006044820152606401610b43565b600081815260086020908152604080832080546001600160a01b03199081169091556005835281842080549091166001600160a01b038781169182179092559087168085526006909352818420805463ffffffff1980821663ffffffff928316600019018316179092558286528386208054928316928216600101909116919091179055905184939192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600054610100900460ff166127345760405162461bcd60e51b8152600401610b439061362e565b610e0833612203565b600054610100900460ff166127645760405162461bcd60e51b8152600401610b439061362e565b6daaeb6d7670e522a718067333cd4e3b15610cfb5760405163c3c5a54760e01b81523060048201526daaeb6d7670e522a718067333cd4e9063c3c5a547906024016020604051808303816000875af11580156127c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e89190613413565b610cfb57801561285c57604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b15801561284857600080fd5b505af1158015612486573d6000803e3d6000fd5b6001600160a01b038216156128ab5760405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af29039060440161282e565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e4869060240161282e565b6001600160a01b03838116600081815260096020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6040518060e001604052806007905b6040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282526000199092019101816129585790505090565b8280548282559060005260206000209081019282156129f1579160200282015b828111156129f157825180516129e1918491602090910190612b0f565b50916020019190600101906129c4565b506129fd929150612b83565b5090565b604051806040016040528060006001600160a01b03168152602001612a24612ba0565b905290565b6040518060e001604052806007905b6040805160a081018252600080825260208083018290529282018190526060820181905260808201528252600019909201910181612a385790505090565b600283019183908215612b035791602002820160005b83821115612acf57835183826101000a81548165ffffffffffff021916908360d01c02179055509260200192600601602081600501049283019260010302612a8c565b8015612b015782816101000a81549065ffffffffffff0219169055600601602081600501049283019260010302612acf565b505b506129fd929150612bbe565b828054612b1b906133df565b90600052602060002090601f016020900481019282612b3d5760008555612b03565b82601f10612b5657805160ff1916838001178555612b03565b82800160010185558215612b03579182015b82811115612b03578251825591602001919060010190612b68565b808211156129fd576000612b978282612bd3565b50600101612b83565b6040518060e001604052806007906020820280368337509192915050565b5b808211156129fd5760008155600101612bbf565b508054612bdf906133df565b6000825580601f10612bef575050565b601f0160209004906000526020600020908101906115c79190612bbe565b80356001600160a01b0381168114611b6457600080fd5b600060208284031215612c3657600080fd5b6116a982612c0d565b6001600160e01b0319811681146115c757600080fd5b600060208284031215612c6757600080fd5b81356116a981612c3f565b60005b83811015612c8d578181015183820152602001612c75565b83811115610dfa5750506000910152565b60008151808452612cb6816020860160208601612c72565b601f01601f19169290920160200192915050565b6020815260006116a96020830184612c9e565b600060208284031215612cef57600080fd5b5035919050565b60008060408385031215612d0957600080fd5b612d1283612c0d565b946020939093013593505050565b600060e08284031215612d3257600080fd5b8260e083011115612d4257600080fd5b50919050565b600080600060608486031215612d5d57600080fd5b612d6684612c0d565b9250612d7460208501612c0d565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b81811015612dbc57835183529284019291840191600101612da0565b50909695505050505050565b80356001600160d01b031981168114611b6457600080fd5b60008060008060808587031215612df657600080fd5b84359350612e0660208601612dc8565b93969395505050506040820135916060013590565b60018060a01b038151168252602081015161ffff8082166020850152806040840151166040850152505060ff606082015116606083015260ff60808201511660808301525050565b60a081016109e88284612e1b565b600060208284031215612e8357600080fd5b6116a982612dc8565b60ff815116825260ff602082015116602083015260ff604082015116604083015260608101511515606083015260ff608082015116608083015260a081015160000b60a083015260c081015160000b60c08301525050565b60e081016109e88284612e8c565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612f2b57612f2b612ef2565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612f5a57612f5a612ef2565b604052919050565b803560ff81168114611b6457600080fd5b80151581146115c757600080fd5b8035600081900b8114611b6457600080fd5b6000806000838503610120811215612faa57600080fd5b843593506020850135925060e0603f1982011215612fc757600080fd5b50612fd0612f08565b612fdc60408601612f62565b8152612fea60608601612f62565b6020820152612ffb60808601612f62565b604082015260a085013561300e81612f73565b606082015261301f60c08601612f62565b608082015261303060e08601612f81565b60a08201526130426101008601612f81565b60c0820152809150509250925092565b803561ffff81168114611b6457600080fd5b600067ffffffffffffffff82111561307e5761307e612ef2565b50601f01601f191660200190565b600061309f61309a84613064565b612f31565b90508281528383830111156130b357600080fd5b828260208301376000602084830101529392505050565b600082601f8301126130db57600080fd5b8135602067ffffffffffffffff808311156130f8576130f8612ef2565b8260051b613107838201612f31565b938452858101830193838101908886111561312157600080fd5b84880192505b858310156131725782358481111561313f5760008081fd5b8801603f81018a136131515760008081fd5b6131628a878301356040840161308c565b8352509184019190840190613127565b98975050505050505050565b60008082840360c081121561319257600080fd5b60a08112156131a057600080fd5b5060405160a0810167ffffffffffffffff82821081831117156131c5576131c5612ef2565b816040526131d286612c0d565b83526131e060208701613052565b60208401526131f160408701613052565b604084015261320260608701612f62565b606084015261321360808701612f62565b608084015291935060a0850135918083111561322e57600080fd5b505061323c858286016130ca565b9150509250929050565b6000806040838503121561325957600080fd5b61326283612c0d565b9150602083013561327281612f73565b809150509250929050565b6000806000806080858703121561329357600080fd5b61329c85612c0d565b93506132aa60208601612c0d565b925060408501359150606085013567ffffffffffffffff8111156132cd57600080fd5b8501601f810187136132de57600080fd5b6132ed8782356020840161308c565b91505092959194509250565b81516001600160a01b031681526020808301516101008301919081840160005b60078110156133405782516001600160d01b03191682529183019190830190600101613319565b5050505092915050565b6000806040838503121561335d57600080fd5b61336683612c0d565b915061337460208401612c0d565b90509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156133d257603f198886030184526133c0858351612c9e565b945092850192908501906001016133a4565b5092979650505050505050565b600181811c908216806133f357607f821691505b602082108103612d4257634e487b7160e01b600052602260045260246000fd5b60006020828403121561342557600080fd5b81516116a981612f73565b634e487b7160e01b600052601160045260246000fd5b6000821982111561345957613459613430565b500190565b634e487b7160e01b600052603260045260246000fd5b600061ffff80831681851680830382111561349157613491613430565b01949350505050565b600061ffff8083168181036134b1576134b1613430565b6001019392505050565b6000600182016134cd576134cd613430565b5060010190565b6000828210156134e6576134e6613430565b500390565b8060005b6007811015610dfa57613503848351612e8c565b60e09390930192602091909101906001016134ef565b61062081016109e882846134eb565b60006020828403121561353a57600080fd5b815167ffffffffffffffff81111561355157600080fd5b8201601f8101841361356257600080fd5b805161357061309a82613064565b81815285602083850101111561358557600080fd5b611443826020830160208601612c72565b838152610aa0810160206135ac818401866134eb565b61064083018460005b60078110156135dc576135c9838351612e1b565b60a09290920191908301906001016135b5565b50505050949350505050565b6040815260006135fb6040830185612c9e565b90508260208301529392505050565b60408152600061361d6040830185612c9e565b905082151560208301529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906136ac90830184612c9e565b9695505050505050565b600082516136c8818460208701612c72565b9190910192915050565b6000602082840312156136e457600080fd5b81516116a981612c3f56fea264697066735822122014bad60145bf9397d1f8017c605278014f31fd07abb4f540a5868469e71576cf64736f6c634300080d0033";

type MashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mash__factory extends ContractFactory {
  constructor(...args: MashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Mash> {
    return super.deploy(overrides || {}) as Promise<Mash>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Mash {
    return super.attach(address) as Mash;
  }
  override connect(signer: Signer): Mash__factory {
    return super.connect(signer) as Mash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MashInterface {
    return new utils.Interface(_abi) as MashInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Mash {
    return new Contract(address, _abi, signerOrProvider) as Mash;
  }
}
